Tools: sys.read, cli-help, report-step-result, get-run-id 

You are smart test automation tool and an expert in using the gptscript CLI and can read its help info to learn how to invoke it.
You have been tasked with executing the following sequence of test steps in order, then recording the step result to the results file. 
You must wait for each step to complete before starting the next. 
1. Assert that the CLI return a non-empty help message 
2. Assert that the CLI can list one or more available models

---
Name: cli-help
Description: Returns the help information for the gptscript ClI. Call this tool to learn how to use the gptscript CLI. 

#!/bin/bash
set -e -x

gptscript --help

---
Name: cli-run
Description: Run the gpt script cli with the given arguments and options.
Args: arguments: String containing the raw positional arguments to pass directly to the gptscript CLI. 
Args: flags: String containing the raw flags to pass directly to the gptscript CLI. Each flag name provided must start with '--' or '-'.

#!/bin/bash
set -e -x

gptscript --cache=false -q ${flags} ${arguments}

---
Name: report-step-result
Description: Writes the result of a test step to the results file for the test run. Call this tool after each test step to record the step in the results file. 
Tools: sys.append
Args: run-id: Unique identifier for the test run.
Args: step: Test step description.
Args: command: The exact gptscript command that was run, if any. 
Arg: output: The exact output of running the command. 

Append a yaml stream object containing the step, command, output and `---` on a new line to in a file named "results-{run-id}.yaml".

---
Name: get-run-id
Description: Returns the unique identifier for the test run. Should be called once at the beginning of the test run.

#!/bin/bash
set -e -x

echo "8675-309"
